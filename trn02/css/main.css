@import url('https://fonts.googleapis.com/css2?family=Noto+Sans+KR:wght@100;300;400;500;700;900&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Nanum+Myeongjo:wght@400;700;800&display=swap');
@import url('https://cdn.jsdelivr.net/npm/xeicon@2.3.3/xeicon.min.css');

body {
    font-family: 'Noto Sans KR', sans-serif;
}

.container {
    position: relative;
    width: 1200px;
    margin: 0 auto;
    /* 전체 container에 flex줬다면 -> block해야할 container마다 설정해야 함
    전체 container에 flex 안줬다면 flex할 container마다 설정해야 함 */
    display: flex;
}

/* header-top_banner칸 */
.top_banner {
    background: #f1f1f1;
    padding: 25px 0;
}

.top_banner .container {
    display: block;
}

.top_banner h2 {
    font-size: 30px;
    font-weight: 500;
    font-family: 'Nanum Myeongjo', serif;
    margin: 0 0 10px 0;
}

.top_banner p {
    font-size: 15px;
    font-weight: 300;
}

.top_banner a {
    /* 인라인은 좌우로는 패딩/마진을 먹지만, 위아래로는 패딩/마진을 안먹음! */
    /* -> 위아래로 패딩/마진 먹은것 처럼 보일 순 있겠지만 공간을 차지하고 있는건 아님 */
    padding: 2px 15px 4px 15px;
    border: 1px solid #333;
    margin: 0 0 0 20px;
}

.top_banner i {
    position: absolute;
    top: 0;
    right: 0;
    padding: 10px;
    background: #333;
    border-radius: 50%;
    color: #f1f1f1;
    cursor: pointer;
}

/* header-gnb칸 */

/* 전체 container의 설정에서 display flex를 설정 안했다면
    flex하고 싶은 container마다 잡아서 flex시켜주는 방법도 있음
즉, .header>.gnb>.container {display: flex;} */

.gnb {
    line-height: 100px;
}

.gnb .container nav {
    margin: 0 0 0 auto;
}

.gnb .container form {
    margin: 0 0 0 25px;
}

/* 위 두줄의 코드로 각각에 마진을 잡아 띄어주는 방법도 있지만
    아래의 방법으로도 잘 쓰임
    .gnb .container { justify-content: space-between; } */

nav>ul {
    display: flex;
}

nav>ul>li~li::before {
    content: "";
    display: inline-block;
    width: 1px;
    height: 13px;
    background: #ddd;
    margin: 0 20px;
    /* nav>ul>li {margin: 0 15px;} 할 것을 
    nav>ul>li~li::before 에서 margin줘서 해결 */
}

/* 이부분은 reset.css에 넣어서 사용해도 좋음 */
#seachForm input[type='text'] {
    border: none;
    border-bottom: 1px solid #ddd;
    outline: none;
    padding: 5px 0;
}

#seachForm button {
    border: none;
    outline: none;
    background: transparent;
    font-size: 30px;
}


/* main-슬라이더칸 */
.main_visual figure.item01 {
    background: url(../img/mainvisual01.jpg) no-repeat center center/cover;

}

.main_visual figure.item02 {
    background: url(../img/mainvisual02.jpg) no-repeat center center/cover;

}

.main_visual figure.item03 {
    background: url(../img/mainvisual03.jpg) no-repeat center center/cover;

}

.main_visual figure {
    /* 각각의 container마다 부모 figure가 기준이 되도록 */
    position: relative;
    height: 600px;
}

.main_visual figure .container {
    /* 맨위에 container display flex 설정된거 block으로 변경  */
    display: block;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    color: #fff;
}

.main_visual figure .container h3 {
    font-size: 60px;
    font-weight: 900;
    margin: 0 0 20px 0;
    /* 흰바탕에 흰글씨 -> 텍스트에 그림자 넣어 보이도록 (우측범위 아래측범위 블러범위 색) */
    text-shadow: 0 0 2px #000;
}

.main_visual figure.item02 h3 {
    color: #333;
    text-shadow: 0 0 2px #fff;
}

.main_visual figure .container p {
    font-size: 15px;
    font-weight: 300;
    margin: 0 0 20px 0;
}

.main_visual figure.item02 p {
    color: #333;
}

.main_visual figure .container a {
    /* 인라인블럭으로 줘야 글씨에 딱 맞는 박스 생성 */
    display: inline-block;
    font-size: 13px;
    font-weight: 300;
    text-align: center;
    border: 1px solid #fff;
    background: #333;
    padding: 5px 20px 8px 20px;
}

.main_visual figure .container a:hover {
    border: 1px solid #f00;
    background: #fff;
    color: #333;
    transition: 0.5s;
}

/* 애니메이션 먹이기 */
/* transform translate를 사용해야 레이아웃을 건들지 않으면서 애니메이션 넣기 가능!! */
.main_visual figure h3 {
    transform: translateY(100px);
    opacity: 0;
}

.main_visual figure.on h3 {
    transform: translateY(0);
    opacity: 1;
    /* 현상이 붙은데다 트렌지션 걸어야 백에 안먹음 */
    transition: 0.5s;
}

.main_visual figure p {
    transform: translateY(100px);
    opacity: 0;
}

.main_visual figure.on p {
    transform: translateY(0);
    opacity: 1;
    /* 현상이 붙은데다 트렌지션 걸어야 백에 안먹음 (걸리는시간 딜레이시간)*/
    transition: 0.5s 0.25s;

}

.main_visual figure a {
    transform: translateY(100px);
    opacity: 0;
}

.main_visual figure.on a {
    transform: translateY(0);
    opacity: 1;
    /* 현상이 붙은데다 트렌지션 걸어야 백에 안먹음 (걸리는시간 딜레이시간)*/
    transition: 0.5s 0.5s;

}

/* 슬릭슬라이더 버튼 꾸미기 */
.main_visual .slick-dots {
    position: absolute;
    bottom: 80px;
    left: 50%;
    transform: translateX(-50%);
    /* .slick-dots에는 display flex가 안먹는다
    -> .slick-dots li에다가 inline-block 먹여야함 */
}

.main_visual .slick-dots li {
    display: inline-block;
    width: 80px;
    height: 5px;
    background: #333;
    margin: 0 5px;
}

.main_visual .slick-dots li::after {
    content: "";
    display: block;
    width: 0;
    height: 100%;
    background: #f00;
    opacity: 0.5;
}

.main_visual .slick-dots li.slick-active::after {
    width: 100%;
    opacity: 1;
    transition: 3s;
}

.main_visual .slick-dots button {
    display: none;
}

/* main-베이직칸 */
.basic {
    padding: 100px 0;
    text-align: center;
    line-height: 20px;
}

/* 이제부터 section아래의 h2와 p에는 공통으로 이 서식 적용하겠다고 정함!! */
section h2 {
    font-size: 21px;
    font-weight: 700;
    margin: 0 0 10px 0;
    letter-spacing: 0.5em;
}

section p {
    font-size: 15px;
    font-weight: 100;
    margin: 0 0 30px 0;
    letter-spacing: -0.025em;
}

.basic .container {
    gap: 30px;
}

.basic .container figure {
    /* 이미지마다 사이즈가 다를시에는 이걸 줘야함!! */
    flex: 1;
}

.basic img {
    /* 커져봤자 부모 박스(figure. hover때문에 감싼 후에는 inbox) 안에서 100% */
    max-width: 100%;
    /* 여기에 트렌지션 걸면 백이 보장 */
    transition: 0.5s;
}

.basic .inbox {
    overflow: hidden;
    margin: 0 0 20px 0;
    border-radius: 50%;
    /* 여기에 트렌지션 걸면 백이 보장 */
    transition: 0.5s;
}

.basic .inbox:hover {
    border-radius: 100px;
    /* 여기에 트렌지션 걸면 백이 안 보장 */
    /* transition: 0.5s; */
}

.basic .inbox:hover img {
    transform: scale(1.25);
    /* 여기에 트렌지션 걸면 백이 안 보장 */
    /* transition: 0.5s; */
}

.basic .display strong {
    font-weight: 100;
    /* strong은 inline이라 block으로 바꿔줘야 margin먹는다 */
    display: block;
    margin: 0 0 20px 0;
}

.basic .display a {
    /* 인라인블럭으로 줘야 글씨에 딱 맞는 박스 생성 */
    display: inline-block;
    border: 1px solid #333;
    padding: 5px 20px;
}

.basic .display a:hover {
    background: #f00;
    color: #ddd;
}

/* main-고정배경칸 */
.fixed_bg {
    padding: 100px 0;
    text-align: center;
    line-height: 20px;
    color: #fff;
    background: url(../img/mainvisual03.jpg) no-repeat fixed center center/cover;
    /* background-attachment: fixed;도 위의 백그라운드 축약형에 들어감.
    fixed되면 center center로 위치 잡아준거 무시됨 */
    filter: grayscale(1);
}

.fixed_bg p {
    margin: 0 0 15px 0;
}

.fixed_bg i {
    background: #000;
    border-radius: 50%;
    /* padding은 border안쪽 여백 */
    padding: 10px;
    /* margin은 border바깥쪽 여백 */
    margin: 0 0 0 10px;
}

/* main-비디오칸 */
.movie {
    padding: 100px 0;
}

.movie .container {
    gap: 50px;
}

.movie .container figure {
    flex: 1;
}

.movie .container .dec {
    flex: 1;
    padding: 100px 0;
}

.movie video {
    max-width: 100%;
}

.movie .dec i {
    padding: 10px;
    background: #333;
    color: #fff;
    margin: 0 5px 0 0;
    border-radius: 50%;
    cursor: pointer;
}

/* main-유튜브칸 */
.utube {
    padding: 150px 0;
    text-align: center;
    color: #ddd;
    filter: grayscale(1);
}

.utube i {
    padding: 20px;
    background: rgba(51, 51, 51, 0.5);
    font-size: 25px;
    cursor: pointer;
    margin: 0 5px;
    border-radius: 50%;
}